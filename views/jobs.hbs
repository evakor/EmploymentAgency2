{{!< layout}} <form method="GET" action="/jobs">
    <div class="filters">
        <select id="occupationDropdown" name="occupation" onchange="updateSpecialties()">
            <option value="">Select Occupation</option>
            {{#each jobCategories.occupations}}
            <option value="{{@index}}">{{this.name}}</option>
            {{/each}}
        </select>

        <select id="specialtyDropdown" name="specialty">
            <option value="">Select Specialty</option>
        </select>

        <select id="regionDropdown" name="region">
            <option value="">Select Region</option>
            {{#each regions as |region|}}
            <option value="{{region}}">{{region}}</option>
            {{/each}}
        </select>

        <button class="btn simple-button" type="submit" id="submit-button">Apply Filters</button>
    </div>
</form>
    <div class="cards">
        {{#each jobs as |job|}}
        <div class="card mb-3" style="max-width: 540px;">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="{{job.imagePath}}" class="card-img" alt="...">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">{{job.title}}</h5>
                        <p class="card-text">{{job.description}}</p>
                        <p class="card-text"><small class="text-muted">{{job.companyName}}</small></p>
                        <button class="btn cards-button position-absolute bottom-0 end-0 mb-2" onclick="confirmApply('{{job.title}}', '{{job.jobID}}')">Apply</button>
                    </div>
                </div>
            </div>
        </div>
        {{/each}}
    </div>
    
    <script>
        const occupationsData = {{{ json jobCategories }}};

        function updateSpecialties() {
            const occupationSelect = document.getElementById('occupationDropdown');
            const specialtySelect = document.getElementById('specialtyDropdown');
            const selectedOccupationIndex = occupationSelect.value;
            specialtySelect.innerHTML = '<option value="">Select Specialty</option>';

            if (selectedOccupationIndex !== "") {
                const specialties = occupationsData.occupations[selectedOccupationIndex].specialties;
                specialties.forEach(specialty => {
                    const option = document.createElement('option');
                    option.value = specialty;
                    option.textContent = specialty;
                    specialtySelect.appendChild(option);
                });
            }
        }

        function confirmApply(jobTitle, jobId) {
                if (confirm("Are you sure you want to apply for the position of '" + jobTitle + "'?")) {
                    fetch(`http://localhost:3000/v1/job/${jobId}`, {
                        method: 'DELETE',
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok ' + response.statusText);
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('Success:', data);
                            alert("Job application was successful.");
                        })
                        .catch(error => {
                            console.error('There was a problem with the fetch operation:', error);
                            alert("Job application failed.");
                        });
                } else {
                    alert("Job application was cancelled.");
                }
            }
    </script>