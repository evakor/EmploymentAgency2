{{!< layout}} 

{{!-- Employer's info 'box' --}}
<section class="vh-50" style="background-color: #e7e9ee;">
  <!--https://mdbootstrap.com/docs/standard/extended/profiles/-->
  <div class="container py-5 h-50">
    <div class="row d-flex justify-content-center align-items-center h-50">
      <div class="col col-lg-6 mb-4 mb-lg-0">
        <div class="card mb-3" style="border-radius: .5rem;">
          <div class="row g-0">
            <div class="col-md-4 profile-bg-color text-center text-white"
              style="border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;">
              <img src="{{employerData.profilePicturePath}}" alt="Avatar" class="img-fluid my-5" style="width: 80px;" />
              <h5>{{employerData.firstName}} {{employerData.lastName}}</h5>
              <p>{{employerData.companyName}}</p>
              <i class="far fa-edit mb-5"></i>
            </div>
            <div class="col-md-8">
              <div class="card-body p-4">
                <h6>Information</h6>
                <hr class="mt-0 mb-4">
                <div class="row pt-1">
                  <div class="col-6 mb-3">
                    <h6>Email</h6>
                    <p class="text-muted">{{employerData.email}}</p>
                  </div>
                  <div class="col-6 mb-3">
                    <h6>Phone 1</h6>
                    <p class="text-muted">{{employerData.phone1}}</p>
                  </div>
                </div>
                <div class="row pt-1">
                  <div class="col-6 mb-3">
                    <h6>Address/Region</h6>
                    <p class="text-muted">{{employerData.address}}/{{employerData.region}}</p>
                  </div>
                  <div class="col-6 mb-3">
                    <h6>Phone 2</h6>
                    <p class="text-muted">{{employerData.phone2}}</p>
                  </div>
                </div>
                <h6>Company Description</h6>
                <hr class="mt-0 mb-4">
                <div class="row pt-1">
                  <div class="col-12 mb-3">
                    <p class="text-muted">{{employerData.companyDesc}}</p>
                  </div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                 <form id="uploadProfilePictureForm" enctype="multipart/form-data">
                    <label class="btn cards-button me-2">
                      <input type="file" id="profilePictureInput"
                        style="display: none" name="profilePicture" accept="image/*">
                        Upload Image
                    </label>
                  </form>
                  <button type="submit" class="btn cards-button me-2" value="new_entry"
                    onclick="openCreateJobModal()">New Job</button>
                  <button type="submit" class="btn cards-button" value="edit"
                    onclick="openEditEmployerModal()">Edit</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    </div>
    </section>

    <h2 style="text-align: center;">My jobs</h2>

{{!-- Job cards --}}
<div class="cards">
  {{#each jobs as |job|}}
  <div class="card mb-3" style="max-width: 600px; height: 300px;">
    <div class="row g-0">
      <div class="col-md-4">
        <img src="{{job.imagePath}}" class="card-img" alt="...">
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <div class="buttons ">
            <div class="button-container">
              {{!-- Messages button --}}
              <button class="button messages" style="font-size: 15px;" onclick="openApplicantProfilesModal('{{job.title}}','{{job.jobId}}')"></button>
              {{!-- Edit job ad button --}}
              <button type="button" id="editButton" class="button edit" style="font-size: 15px; transform: rotate(90deg);" onclick="openEditJobModal('{{job.jobId}}')"></button>
              {{!-- Delete button --}}
              <form id="deleteJobAd" method="post" action="/employer">
                <input type="hidden" id="jobId" name="jobId" value="{{job.jobId}}">
                <button type="submit" id = "deleteAd" class="button delete" style="font-size: 15px;" onclick="confirmDelete('{{job.title}}', '{{job.jobId}}')"></button>
              </form>
            </div>
          </div>
          {{!-- Make the job's title hyperlink to open a view more modal --}}
          <h5 class="card-title"><a href="#" id="jobTitleLink" class="job-link" data-job-id="{{job.jobId}}">{{job.title}}</a></h5>
          <p class="card-text">{{job.description}}</p>
          <p class="card-text"><small class="text-muted">{{job.companyName}}</small></p>
        </div>
      </div>
    </div>
  </div>
  {{/each}}
</div>


{{!-- Edit employer's profile info modal--}}
<div id="myModal" class="modal">
  <div class="modal-content">
    <span class="close" >&times;</span>
    <div class="modal-body">
      <form id="editEmployerForm" method="post">
        <div class="mb-3">
          <label for="editFirstName" class="form-label">First Name</label>
          <input type="text" class="form-control" name="editFirstName" value="{{employerData.firstName}}">
        </div>
        <div class="mb-3">
          <label for="editFirstName" class="form-label">Last Name</label>
          <input type="text" class="form-control" name="editLastName" value="{{employerData.lastName}}">
        </div>
        <div class="mb-3">
          <label for="editEmail" class="form-label">Email</label>
          <input type="email" class="form-control" name="editEmail" value="{{employerData.email}}">
        </div>
        <div class="mb-3">
          <label for="editPhone1" class="form-label">Phone 1</label>
          <input type="tel" class="form-control" name="editPhone1" value="{{employerData.phone1}}">
        </div>
        <div class="mb-3">
          <label for="editPhone2" class="form-label">Phone 2</label>
          <input type="tel" class="form-control" name="editPhone2" value="{{employerData.phone2}}">
        </div>
        <div class="mb-3">
          <label for="editAddress" class="form-label">Address</label>
          <input type="text" class="form-control" name="editAddress" value="{{employerData.address}}">
        </div>
        <div class="mb-3">
          <label for="editRegion" class="form-label">Region</label>
          <input type="text" class="form-control" name="editRegion" value="{{employerData.region}}">
        </div>
        <div class="mb-3">
          <label for="editCompanyDesc" class="form-label">Company Description</label>
          <input type="text" class="form-control" name="editCompanyDesc" value="{{employerData.companyDesc}}">
        </div>
      </form>
       {{!-- <button type="button" class="btn btn-close btn-primary" data-bs-dismiss="modal">Close</button>
      <button type="button" class="btn btn-primary" id="saveChangesButton">Save Changes</button> --}}
      <div class="modal-footer" style="text-align: right;">
        <button type="button" class="btn btn-primary" id="saveChangesButton">Save Changes</button>
      </div>
    </div>
  </div>
</div>


    {{!-- Create a new job entry Modal--}}
    <div id="createJobModal" class="modal">
      <div class="modal-content">
        <div class="modal-body">
          <form id="createJobForm" method="post" action="/employer">
            <div class="mb-3">
              <label for="jobTitle" class="form-label">Job Title</label>
              <input type="text" class="form-control" name="jobTitle" required>
            </div>
            <div class="mb-3">
              <label for="jobDescription" class="form-label">Job Description</label>
              <textarea class="form-control" name="jobDescription" required></textarea>
            </div>
            <div class="mb-3">
              <label for="extendedDescr" class="form-label">Extended Description</label>
              <textarea class="form-control" name="extendedDescr"></textarea>
            </div>
            <div class="mb-3">
              <label for="jobDuration" class="form-label">Duration</label>
              <input type="number" class="form-control" name="jobDuration" required>
            </div>
            <div class="mb-3">
              <label for="companyName" class="form-label">Company Name</label>
              <input type="text" class="form-control" id="companyName" required>
            </div>
            <div class="mb-3">
              <select id="occupationDropdown" name="jobOccupation" onchange="updateSpecialties()" required>
                <option>Select Occupation</option>
                {{#each jobCategories.occupations}}
                <option value="{{@index}}">{{this.name}}</option>
                {{/each}}
              </select>
              <select id="specialtyDropdown" name="jobSpecialty">
                <option>Select Specialty</option>
              </select>
            </div>
          </form>
          <button type="button" class="btn btn-close btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="createJobAd">Create Job</button>
        </div>
      </div>
    </div>

    <!-- Job's ad More Information Modal -->
    <div id="jobModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalJobTitle"></h2>
        <p id="modalCompanyName"></p>
        <p id="modalJobDescription"></p>
        <p id="modalExtendedJobDescription"></p>
      </div>
    </div>


<!-- Job's ad Edit Information Modal -->
<div id="editJobModal" class="modal">
  <div class="modal-content">
    <span class="close" >&times;</span>
    <div class="modal-body">
      <form id="editJobForm" method="post" action="/employer/updateJob">
        <div class="mb-3">
          <label for="jobTitle" class="form-label">Title</label>
          <input type="text" class="form-control" id="editJobTitle" name="editJobTitle" >
        </div>
        <div class="mb-3">
          <label for="jobDescription" class="form-label">Description</label>
          <textarea class="form-control" id="editJobDescription" name="editJobDescription"></textarea>
        </div>
        <div class="mb-3">
          <label for="extendedDescr" class="form-label">Extended Description</label>
          <textarea class="form-control" id="editJobExtendedDescr" name="editJobExtendedDescr"></textarea>
        </div>
        <div class="mb-3">
          <label for="jobDuration" class="form-label">Duration</label>
          <input type="number" class="form-control" id="editJobDuration" name="editJobDuration">
        </div>
        <div class="mb-3">
          <label for="companyName" class="form-label">Company Name</label>
          <input type="text" class="form-control" id="editJobCompanyName" name="editJobCompanyName" >
        </div>
        <div class="mb-3">
          <select id="occupationDropdown" name="editJobOccupation" onchange="updateSpecialties()" >
            <option >Occupation</option>
            {{#each jobCategories.occupations}}
            <option value="{{@index}}">{{this.name}}</option>
            {{/each}}
          </select>
          <select id="specialtyDropdown" name="editJobSpecialty">
            <option >Specialty</option>
          </select>
        </div>
      </form>
      <div class="modal-footer" style="text-align: right;">
        <button type="button" class="btn btn-primary" id="saveChangesEditJob">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Applicant Profiles Modal -->
<div id="applicantProfilesModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2 id="h2Text"></h2>
    <div id="applicantProfilesContainer">
    </div>
  </div>
</div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>

      const occupationsData = {{{ json jobCategories }}};

      function updateSpecialties() {
        console.log('stage1');
        const occupationSelect = document.getElementById('occupationDropdown');
        const specialtySelect = document.getElementById('specialtyDropdown');
        const selectedOccupationIndex = occupationSelect.value;
        specialtySelect.innerHTML = '<option value="{{employeeData.specialty}}">Select Specialty</option>';
        console.log('stage2');
        if (selectedOccupationIndex !== "") {
          const specialties = occupationsData.occupations[selectedOccupationIndex].specialties;
          specialties.forEach(specialty => {
            const option = document.createElement('option');
            option.value = specialty;
            option.textContent = specialty;
            specialtySelect.appendChild(option);
          });
        }
      }
      //----------------------------------------------------------------------------------------------

  //Edit Employer Modal
  document.addEventListener('DOMContentLoaded', function () {
      window.openEditEmployerModal = function () {
        var modal = document.getElementById("myModal");
        var span = document.getElementsByClassName("close")[0];

          if (modal) {
            modal.style.display = "block";
            span.onclick = function () {
              modal.style.display = "none";
            }
            window.onclick = function (event) {
              if (event.target == modal) {
                modal.style.display = "none";
              }
            }
          } else {
            console.error('Modal element not found.');
          }
        }
      });

    document.getElementById('saveChangesButton').addEventListener('click', function () {
      document.getElementById('editEmployerForm').submit();
    });
//-----------------------------------------------------------------------------------------------
  
  //Create a new Job Modal

  document.addEventListener('DOMContentLoaded', function () {
      window.openCreateJobModal = function () {
        var modal = document.getElementById("createJobModal");
        var span = document.getElementsByClassName("btn-close")[0];

          if (modal) {
            modal.style.display = "block";
            span.onclick = function () {
              modal.style.display = "none";
            }
            window.onclick = function (event) {
              if (event.target == modal) {
                modal.style.display = "none";
              }
            }
          } else {
            console.error('Modal element not found.');
          }
        }
      });

    document.getElementById('createJobAd').addEventListener('click', function () {
      document.getElementById('createJobForm').submit();
    });


      //-----------------------------------------------------------------------------------------------
      //For the delete button
      function confirmDelete(jobTitle, jobId) {
        console.log(jobId);
        if (confirm("Are you sure you want to delete the job posting for '" + jobTitle + "'?")) {
          console.log(jobTitle, jobId);
          deleteAd(jobId);
        } else {
          alert("Deletion cancelled.");
        }
      }

      function deleteAd(jobId) {
        console.log(jobId);
        document.getElementById('deleteAd').addEventListener('click', function () {
          document.getElementById('deleteJobAd').submit();})
      }

      //----------------------------------------------------------------------------------------------

      //Job's titles hyperlink-modal
      document.addEventListener('DOMContentLoaded', (event) => {
        const modal = document.getElementById('jobModal');
        const span = document.getElementsByClassName('close')[0];
        const jobTitle = document.getElementById('modalJobTitle');
        const jobDescription = document.getElementById('modalJobDescription');
        const companyName = document.getElementById('modalCompanyName');
        const jobExtendedDescription = document.getElementById('modalExtendedJobDescription');

        document.querySelectorAll('.job-link').forEach(link => {
          link.onclick = function () {
            const jobId = this.getAttribute('data-job-id');

            axios.get(`http://localhost:3000/v1/job/${jobId}`)
              .then(response => {
                const job = response.data;
                jobTitle.innerText = job.title;
                companyName.innerText = job.companyName;
                jobDescription.innerText = job.description;
                jobExtendedDescription.innerText = job.extendedDescr;
                modal.style.display = 'block';
              })
              .catch(error => {
                console.error('Error fetching job details:', error);
              });

            return false;
          };
        });

        span.onclick = function () {
          modal.style.display = 'none';
        };

        window.onclick = function (event) {
          if (event.target == modal) {
            modal.style.display = 'none';
          }
        };
      });

      //-----------------------------------------------------------------------------------------------

  //Edit Job ad Modal
  async function openEditJobModal(jobId) {
      const modal = document.getElementById('editJobModal');
      const span = document.getElementsByClassName('close')[0];

      try {
        const job = await getJobById(jobId);
        console.log(job);


        document.getElementById('editJobId').value = job.id;
        document.getElementById('editJobTitle').value = job.title;
        document.getElementById('editJobDescription').value = job.description;
        document.getElementById('editJobExtendedDescr').value = job.extendedDescr;
        document.getElementById('editJobDuration').value = job.duration;
        document.getElementById('editJobCompanyName').value = job.companyName;

        if (modal) {
          modal.style.display = "block";
          span.onclick = function () {
            modal.style.display = 'none';
          };
          window.onclick = function (event) {
            if (event.target == modal) {
              modal.style.display = "none";
            }
          };
        } else {
          console.error('Modal element or job data not found.');
        }
      } catch (error) {
        console.error('Error fetching job details:', error);
      }
    }

      async function getJobById(jobId) {
        try {
          const response = await axios.get(`http://localhost:3000/v1/job/${jobId}`);
          return response.data;
        } catch (error) {
          console.error('Error fetching job details:', error);
        }
      }

    document.addEventListener('DOMContentLoaded', function () {
      document.getElementById('saveChangesEditJob').addEventListener('click', function () {
        document.getElementById('editJobForm').submit();
      });
    });

    // Ensure openEditJobModal is available globally
    window.openEditJobModal = openEditJobModal;


//-----------------------------------------------------------------------------------------------

  //Messages modal
function openApplicantProfilesModal(jobTitle, jobId) {
    const modal = document.getElementById('applicantProfilesModal');
    const span = document.getElementsByClassName('close')[0];
    const profilesContainer = document.getElementById('applicantProfilesContainer');
    const h2Text = document.getElementById('h2Text');
    h2Text.innerHTML= 'Applicants for ' +jobTitle;

    // Fetch applicant profiles for the job
    axios.get(`http://localhost:3000/v1/application/byJobId/${jobId}`)
      .then(response => {
        const applicants = response.data;
        profilesContainer.innerHTML = '';
        console.log(applicants);
        if(Array.isArray(applicants)){
          applicants.forEach(applicant => {
            const profileCard = `
              <div class="profile-card">
                
                <h5>${applicant.firstName} ${applicant.lastName}</h5>
                <p>Email: ${applicant.email}</p>
                <p>Phone: ${applicant.phone1} ${applicant.phone2}</p>
                <p>Region: ${applicant.region}</p>
                <p>Occupation: ${applicant.occupation}/${applicant.specialty}</p>
              </div>
            `;
          profilesContainer.innerHTML += profileCard;
        });
      }else {
        profilesContainer.innerHTML = '<p>No applicants found.</p>';
      }
        modal.style.display = 'block';
      })
      .catch(error => {
        console.error('Error fetching applicant profiles:', error);
      });

    // Close the modal
    span.onclick = function() {
      modal.style.display = 'none';
    };

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = 'none';
      }
    };
  }

  // Ensure openApplicantProfilesModal is available globally
  window.openApplicantProfilesModal = openApplicantProfilesModal;
</script>